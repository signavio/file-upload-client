buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

group 'signavio'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: "jacoco"

mainClassName = "com.signavio.uploadclient.App"
sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    mavenCentral()
}

dependencies {

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.4.9'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.4'

    compile group: 'com.google.inject', name: 'guice', version: '4.2.0'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.2.0'
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'
    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.2.0'
    testCompile group: 'com.google.inject.extensions', name: 'guice-testlib', version: '4.2.0'

}

jar {
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'com.signavio.uploadclient.App'
    }
}

distributions {
    custom {
        baseName = "file-upload-client"
        contents {
            startScripts.onlyIf { false } //exclude everything
            from { jar }
            from { 'src/main/dist/' }
        }
    }
}

jacoco {
    toolVersion = "0.8.1"
//    reportsDir = file("$buildDir/customJacocoReportDir")
}


jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
    executionData test
}



test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    finalizedBy jacocoTestReport
}